*************** 5.7 Уязвимость изменения внешних сущностей XML *******************

Уязвимости внедрения внешних сущностей XML

Что такое XML?

Расширяемый язык разметки (Extensible Markup Language, XML) позволяет определять и хранить данные совместно используемым способом. XML поддерживает обмен информацией между компьютерными системами, такими, как веб-сайты, базы данных и сторонние приложения. Предопределенные правила упрощают передачу данных в виде XML-файлов по любой сети, поскольку получатель может использовать эти правила для точного и эффективного чтения данных.

Что это такое XXE инъекция?

Инъекция внешних сущностей XML (также известная как XML External Entity, XXE) – это уязвимость веб-безопасности, позволяющая злоумышленнику вмешиваться в обработку XML-данных приложения. Часто она позволяет злоумышленнику просматривать файлы на файловой системе сервера приложений, а также взаимодействовать с любыми внутренними или внешними системами, к которым имеет доступ само приложение.

Почему такие уязвимости появляются?

Некоторые приложения используют формат XML для передачи данных между браузером и сервером. Приложения, которые делают это, практически всегда используют стандартную библиотеку или платформенный API для обработки XML-данных на сервере.

Уязвимости XXE возникают из-за того, что спецификация XML содержит различные потенциально опасные функции, и стандартные парсеры поддерживают эти функции, даже если они обычно не используются приложением.

Узнаем о формате XML, DTD и внешних сущностях

Внешние сущности XML — это тип пользовательских сущностей XML, определенные значения которых загружаются вне DTD, в котором они объявлены. Внешние сущности особенно интересны с точки зрения безопасности, так как они позволяют определить сущность, основываясь на содержимом пути к файлу или URL.

Пример кода XML документа:
5_7_1.png

Пример инъекции внешних сущностей в XML документ:
5_7_2.png

К чему такие уязвимости могут привести?

Атаки инъекции XXE позволяют провести множество различных вариаций векторов атак, например:

    Использование XXE для получения файлов, где определяется внешняя сущность, содержащая содержимое файла, и возвращается в ответе приложения.
    Использование XXE для выполнения SSRF атак, где внешняя сущность определяется на основе URL на внутреннюю систему.
    Использование слепой инъекции XXE с отправкой данных за рамки клиент-серверного приложения, где конфиденциальные данные передаются с сервера приложения на систему, контролируемую злоумышленником.
    Использование слепого XXE для получения данных с помощью сообщений об ошибках, где злоумышленник может вызвать сообщение об ошибке разбора, содержащее конфиденциальные данные.
    Использование XXE для проведения атак отказа в обслуживании (англ. Distributed Denialof Service (DDoS)).
    
Примеры XXE

Для выполнения атаки XXE-инъекции, в результате которой произвольный файл извлекается из файловой системы сервера, вам необходимо изменить представленный XML двумя способами:
5_7_3.png
    Ввести или отредактировать элемент DOCTYPE, который определяет внешнюю сущность, содержащую путь к файлу.
    Отредактировать значение данных в XML, которое возвращается в ответе приложения, чтобы использовать определенную внешнюю сущность.

Например, предположим, что торговое приложение проверяет уровень запасов продукта, отправляя следующий XML на сервер:
5_7_4.png

Приложение не выполняет никакой специфической защиты от атак XXE, поэтому вы можете использовать уязвимость XXE для получения файла /etc/passwd, отправив следующую полезную нагрузку XXE:Эта полезная нагрузка XXE определяет внешнюю сущность &xxe, значение которой является содержимым файла /etc/passwd и использует сущность в пределах значения productId. Это приводит к тому, что в ответ приложения включается содержимое файла:
5_7_5.png


Материалы для самостоятельного изучения

    Больше об XML сущностях  https://portswigger.net/web-security/xxe/xml-entities
    PayloadsAllTheThings - XXE Injection https://portswigger.net/web-security/xxe/xml-entities
    Обзор уязвимости XXE и ее вариаций  https://phonexicum.github.io/infosec/xxe.html
    Практика на платформе portswigger  https://portswigger.net/web-security/all-labs#xml-external-entity-xxe-injection
 
 

Разбор техники

Ход действий

1. Зайдем на главную страницу сайта http://evil.corp:1337/ и заполним форму:
5_7_6.png
2. Проанализируем запросы в BurpSuite. При отправке данной формы сформировался POST-запрос к order.php, откроем его в Repeater:
5_7_7.png
    В теле запроса используется формат XML, позволяющий внедрять в поля различные внешние данные, в том числе файлы. Если такие данные обрабатываются парсером, то может возникнуть уязвимость XXE – XML external entity injection. 

3. Для тестирования на уязвимость используем список полезных нагрузок: https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/XXE%20Injection/README.md

Внедрим классическую нагрузку:
5_7_8.png
Так поле comment будет содержать сущность с типом data, содержащую данные из файла /etc/passwd. Отправим запрос на хост и получим в ответе id нового заказа.

4. Перейдем по ссылке http://evil.corp:1337/receipt.php?orderID=5 и увидим в поле comments содержимое passwd:
5_7_9.png
    Аналогично можно поступить для файла /var/www/secret, содержащего флаг.


 

